package com.bigoffs.rfid.database.greendao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.bigoffs.rfid.mvp.bean.AllocationError;
import com.bigoffs.rfid.mvp.bean.GroundingDetailInfo;
import com.bigoffs.rfid.mvp.bean.Sku;
import com.bigoffs.rfid.mvp.bean.User;
import com.bigoffs.rfid.mvp.bean.dao.AllcationCase;
import com.bigoffs.rfid.mvp.bean.dao.GroundingAllocationDetailInfo;
import com.bigoffs.rfid.mvp.bean.dao.InventoryCase;
import com.bigoffs.rfid.mvp.bean.dao.PickCase;
import com.bigoffs.rfid.mvp.bean.dao.ProductInfoBackupCase;
import com.bigoffs.rfid.mvp.bean.dao.ProductInfoCase;

import com.bigoffs.rfid.database.greendao.AllocationErrorDao;
import com.bigoffs.rfid.database.greendao.GroundingDetailInfoDao;
import com.bigoffs.rfid.database.greendao.SkuDao;
import com.bigoffs.rfid.database.greendao.UserDao;
import com.bigoffs.rfid.database.greendao.AllcationCaseDao;
import com.bigoffs.rfid.database.greendao.GroundingAllocationDetailInfoDao;
import com.bigoffs.rfid.database.greendao.InventoryCaseDao;
import com.bigoffs.rfid.database.greendao.PickCaseDao;
import com.bigoffs.rfid.database.greendao.ProductInfoBackupCaseDao;
import com.bigoffs.rfid.database.greendao.ProductInfoCaseDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig allocationErrorDaoConfig;
    private final DaoConfig groundingDetailInfoDaoConfig;
    private final DaoConfig skuDaoConfig;
    private final DaoConfig userDaoConfig;
    private final DaoConfig allcationCaseDaoConfig;
    private final DaoConfig groundingAllocationDetailInfoDaoConfig;
    private final DaoConfig inventoryCaseDaoConfig;
    private final DaoConfig pickCaseDaoConfig;
    private final DaoConfig productInfoBackupCaseDaoConfig;
    private final DaoConfig productInfoCaseDaoConfig;

    private final AllocationErrorDao allocationErrorDao;
    private final GroundingDetailInfoDao groundingDetailInfoDao;
    private final SkuDao skuDao;
    private final UserDao userDao;
    private final AllcationCaseDao allcationCaseDao;
    private final GroundingAllocationDetailInfoDao groundingAllocationDetailInfoDao;
    private final InventoryCaseDao inventoryCaseDao;
    private final PickCaseDao pickCaseDao;
    private final ProductInfoBackupCaseDao productInfoBackupCaseDao;
    private final ProductInfoCaseDao productInfoCaseDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        allocationErrorDaoConfig = daoConfigMap.get(AllocationErrorDao.class).clone();
        allocationErrorDaoConfig.initIdentityScope(type);

        groundingDetailInfoDaoConfig = daoConfigMap.get(GroundingDetailInfoDao.class).clone();
        groundingDetailInfoDaoConfig.initIdentityScope(type);

        skuDaoConfig = daoConfigMap.get(SkuDao.class).clone();
        skuDaoConfig.initIdentityScope(type);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        allcationCaseDaoConfig = daoConfigMap.get(AllcationCaseDao.class).clone();
        allcationCaseDaoConfig.initIdentityScope(type);

        groundingAllocationDetailInfoDaoConfig = daoConfigMap.get(GroundingAllocationDetailInfoDao.class).clone();
        groundingAllocationDetailInfoDaoConfig.initIdentityScope(type);

        inventoryCaseDaoConfig = daoConfigMap.get(InventoryCaseDao.class).clone();
        inventoryCaseDaoConfig.initIdentityScope(type);

        pickCaseDaoConfig = daoConfigMap.get(PickCaseDao.class).clone();
        pickCaseDaoConfig.initIdentityScope(type);

        productInfoBackupCaseDaoConfig = daoConfigMap.get(ProductInfoBackupCaseDao.class).clone();
        productInfoBackupCaseDaoConfig.initIdentityScope(type);

        productInfoCaseDaoConfig = daoConfigMap.get(ProductInfoCaseDao.class).clone();
        productInfoCaseDaoConfig.initIdentityScope(type);

        allocationErrorDao = new AllocationErrorDao(allocationErrorDaoConfig, this);
        groundingDetailInfoDao = new GroundingDetailInfoDao(groundingDetailInfoDaoConfig, this);
        skuDao = new SkuDao(skuDaoConfig, this);
        userDao = new UserDao(userDaoConfig, this);
        allcationCaseDao = new AllcationCaseDao(allcationCaseDaoConfig, this);
        groundingAllocationDetailInfoDao = new GroundingAllocationDetailInfoDao(groundingAllocationDetailInfoDaoConfig, this);
        inventoryCaseDao = new InventoryCaseDao(inventoryCaseDaoConfig, this);
        pickCaseDao = new PickCaseDao(pickCaseDaoConfig, this);
        productInfoBackupCaseDao = new ProductInfoBackupCaseDao(productInfoBackupCaseDaoConfig, this);
        productInfoCaseDao = new ProductInfoCaseDao(productInfoCaseDaoConfig, this);

        registerDao(AllocationError.class, allocationErrorDao);
        registerDao(GroundingDetailInfo.class, groundingDetailInfoDao);
        registerDao(Sku.class, skuDao);
        registerDao(User.class, userDao);
        registerDao(AllcationCase.class, allcationCaseDao);
        registerDao(GroundingAllocationDetailInfo.class, groundingAllocationDetailInfoDao);
        registerDao(InventoryCase.class, inventoryCaseDao);
        registerDao(PickCase.class, pickCaseDao);
        registerDao(ProductInfoBackupCase.class, productInfoBackupCaseDao);
        registerDao(ProductInfoCase.class, productInfoCaseDao);
    }
    
    public void clear() {
        allocationErrorDaoConfig.clearIdentityScope();
        groundingDetailInfoDaoConfig.clearIdentityScope();
        skuDaoConfig.clearIdentityScope();
        userDaoConfig.clearIdentityScope();
        allcationCaseDaoConfig.clearIdentityScope();
        groundingAllocationDetailInfoDaoConfig.clearIdentityScope();
        inventoryCaseDaoConfig.clearIdentityScope();
        pickCaseDaoConfig.clearIdentityScope();
        productInfoBackupCaseDaoConfig.clearIdentityScope();
        productInfoCaseDaoConfig.clearIdentityScope();
    }

    public AllocationErrorDao getAllocationErrorDao() {
        return allocationErrorDao;
    }

    public GroundingDetailInfoDao getGroundingDetailInfoDao() {
        return groundingDetailInfoDao;
    }

    public SkuDao getSkuDao() {
        return skuDao;
    }

    public UserDao getUserDao() {
        return userDao;
    }

    public AllcationCaseDao getAllcationCaseDao() {
        return allcationCaseDao;
    }

    public GroundingAllocationDetailInfoDao getGroundingAllocationDetailInfoDao() {
        return groundingAllocationDetailInfoDao;
    }

    public InventoryCaseDao getInventoryCaseDao() {
        return inventoryCaseDao;
    }

    public PickCaseDao getPickCaseDao() {
        return pickCaseDao;
    }

    public ProductInfoBackupCaseDao getProductInfoBackupCaseDao() {
        return productInfoBackupCaseDao;
    }

    public ProductInfoCaseDao getProductInfoCaseDao() {
        return productInfoCaseDao;
    }

}
